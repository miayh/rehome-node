####################################################################################################
### FUNCTION DEFINITIONS
####################################################################################################

func createMOs
### Given a group of related MOS, appends to a file with the
### commands needed to create all the MOs for every MO in the group.
###
### $1: the group of related MOs
lgmc $1
!cat $undocommandfile >> $arg1
done
endfunc

####################################################################################################

func createGroup
### Creates a group of MOs based on a given name criteria.
###
### $2: the string the MO must have in its name for it to be included in the group
### $3: the group in which to store the MOs
unset $output
unset $nr_of_lines
unset $i
$output = readfile($1)
for $i = 1 to $nr_of_lines
	$mo = $output[$i]
	if $mo ~ $2
		$mo_parts = split($mo)
		$proxy = $mo_parts[1]
		ma $3 $proxy
	fi
done
endfunc

####################################################################################################

func getRadioInfo
### Appends commands to a file to create the neccessary MOs
### for a radio unit.
###
### $1: the file to append the commands for creation
### $2: a string to identify MOs related to the radio
$arg1 = $1
$arg2 = $2
l+ radio_info
st $arg2
l-
ma radios 0
createGroup radio_info ^\s+[0-9]+\s.*$arg2 radios
mr radios 0
createMOs radios $arg1
!rm radio_info
endfunc

####################################################################################################

func getRiLinkInfo
### Appends commands to a file to create the neccessary MOs
### for all the Ri links.
###
### $1: the file to append the commands for creation
### $2: a string to identify MOs related to Ri links
$arg1 = $1
$arg2 = $2
l+ rilink_info
lst $arg2
l-
ma rilinks 0
createGroup rilink_info ^\s+[0-9]+\s.*$arg2 rilinks
mr rilinks 0
createMOs rilinks $arg1
!rm rilink_info
endfunc

####################################################################################################

func getAntennaInfo
### Appends commands to a file to create the neccessary MOs
### for an antenna unit.
###
### $1: the file to append the commands for creation
### $2: a string to identify MOs related to the antenna
$arg1 = $1
$arg2 = $2
l+ antenna_info
get $arg2
l-
ma antennas 0
createGroup antenna_info ^[0-9]+\s.*$arg2 antennas
mr antennas 0
createMOs antennas $arg1
!rm antenna_info
endfunc

####################################################################################################

func getCarrierInfo
### Appends commands to a file to create the neccessary MOs
### for all the carriers.
###
### $1: the file to append the commands for creation
### $2: a string to identify MOs related to the carriers
$arg1 = $1
$arg2 = $2
l+ carrier_info
st $arg2
l-
ma carriers 0
createGroup carrier_info ^\s+[0-9]+\s.*$arg2 carriers
mr carriers 0
createMOs carriers $arg1
!rm carrier_info
endfunc

####################################################################################################

func getSectorInfo
### Appends commands to a file to create the neccessary MOs
### for all the sectors.
###
### $1: the file to append the commands for creation
### $2: a string to identify MOs related to the sectors
$arg1 = $1
$arg2 = $2
l+ sector_info
st $arg2
l-
ma sectors 0
createGroup sector_info ^\s+[0-9]+\s.*$arg2 sectors
mr sectors 0
createMOs sectors $arg1
!rm sector_info
endfunc

####################################################################################################

func getCellProperties
### Collects a given cells properties (frequencies, TAC, PCI)
### and appends the information to a given file.
###
### $1: the RDN name of the MO
### $2: the file to append to
if $1 ~ ^EUtranCell
	l+ cell_def
	hget $1 dlChannelBandwidth|earfcndl|freqband$|physicalLayerCellId$|operationslState|tac$
	l-
	!cat cell_def >> $2
	!rm cell_def
else if $1 ~ ^NRCell
	l+ cell_def
	hget $1 arfcnDL|arfcnUL|configuredMaxTxPower|MaxTransmissionPower|noofUsed|bSChannelBw
	l-
	!cat cell_def >> $2
	!rm cell_def
fi
endfunc

####################################################################################################

func getCellInfo
### Retrieves all the information related to a cell and produces a file with
### the cell names and a file with the commands needed to recreate the cells.
### 
### $1: the file to append all the MO-creation commands
### $2: the string to identify all cells
unset $cell_info_output
unset $nr_of_lines
unset $i
$arg1 = $1
$arg2 = $2
l+ cell_info
st $arg2
l-
$cell_info_output = readfile(cell_info)
for $i = 1 to $nr_of_lines
	$cell_mo = $cell_info_output[$i]
	if $cell_mo ~ ^\s+[0-9]+\s
		$cell_mo_parts = split($cell_mo)
		$cell_proxy = $cell_mo_parts[1]
		$ldn = ldn($cell_proxy)
		$rdn = rdn($cell_proxy)
		getCellProperties $rdn cellProperties.txt
		createMOs $ldn $arg1
	fi
done
!rm cell_info
endfunc

####################################################################################################
### MAIN
####################################################################################################

### Calls a file with the function calls and their respective parameters 
### 
### Example usage:
### `run collectNodeInfo.mos cmds.mos`, where each line in cmds.mos is formatted in the following way:
### 	 
### 	[FUNCTION] [FILE1] [SUBSTRING]
### 	getRadioInfo radioCreation.mos FieldReplaceableUnit=R
run $1
